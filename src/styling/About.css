.about-section {
    background-color: rgba(2, 13, 35, 0.0);
    z-index: 0;
    text-align: center;
    min-height: 100vh;
    margin-left: 50px;
    margin-right: 50px;
}

.about-header h {
    display: inline-block;
    color: white;
    font-size: 35px;
    margin-top: 100px;
    font-family: 'Courier New', Courier, monospace;
    font-weight: bolder;
    --a: -45deg;
    --t: 8px;
    --_s: calc(var(--t)*cos(var(--a)));
    background: linear-gradient(var(--a), #0000 var(--_s), lightskyblue 0 calc(100% - var(--_s)), #0000 0) bottom/var(--i, 95%) var(--t) no-repeat;
    padding: 5px;
}

.aboutContent-container {
    display: flex;
    align-items: center;
    margin-top: 100px;
}

.about-description {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    max-width: 50%;
    text-align: left;
}

.aboutContent-container p {
    font-family: 'Brush Script MT', cursive;
    font-size: 1.1rem;
    color: white;
    line-height: 30px;
    width: 85%;
}

.img-container img {
    border-radius: 8px;
    height: 300px;
    width: auto;
    border: 5px solid #0000;
    border-radius: 12px;
    background: linear-gradient(#000000, #000000) padding-box, conic-gradient(from var(--angle), lightskyblue, lightseagreen, lightskyblue) border-box;
}

.skill-icons {
    display: flex;
    justify-content: space-evenly;
    text-align: center;
    align-items: center;
    width: 50%;
}

.skill-icons>* {
    display: flex;
    flex-direction: column;
    gap: 30px;

}

.skill-icons img {
    height: 90px;
}

figcaption {
    font-size: 16px;
    color: white;
    text-align: center;
    margin-top: 8px;
    font-family: 'Brush Script MT', cursive;
}

.skill-icons .col1 figure,
.col2 figure,
.col3 figure {
    width: 200px;
    height: 135px;
    border: 5px solid #0000;
    border-radius: 12px;
    background: linear-gradient(#000000, #000000) padding-box, conic-gradient(from var(--angle), lightskyblue, lightseagreen, darkgrey, lightskyblue) border-box;
    animation: 8s rotate linear infinite;
}

@keyframes rotate {
    to {
        --angle: 360deg;
    }
}

@property --angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}